plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

repositories {
	maven {
		name "Nucleoid"
		url "https://maven.nucleoid.xyz/"
		//mavenLocal()
	}
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url "https://jitpack.io" }
	// Only for a local maven repo for deps
	//flatDir { dirs 'libs' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	implementation "com.google.code.gson:gson:${project.gson_version}"
	implementation "com.google.code.findbugs:jsr305:3.0.2"

	// Fabric
	mappings "net.fabricmc:yarn:${project.mappings_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	include(modApi(fabricApi.module("fabric-api-base", project.fabric_api_version)))
	include(modApi(fabricApi.module("fabric-networking-api-v1", project.fabric_api_version)))
	include(modApi(fabricApi.module("fabric-command-api-v2", project.fabric_api_version)))
	include(modApi(fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version)))

	// API Addons
	modImplementation "eu.pb4:placeholder-api:${project.placeholder_api_version}"
	modImplementation "me.lucko:fabric-permissions-api:${project.fabric_permissions_api_version}"
	// modCompileOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

group = project.group + "." + project.mod_id
archivesBaseName = project.mod_file_name + '-' + project.minecraft_version_out
version = project.mod_version

if (version.endsWith('-dev')) {
	version += "." + new Date().format('yyyyMMdd.HHmmss')
}

processResources {
	inputs.property "mod_version", project.version

	filesMatching("fabric.mod.json") {
		expand "mod_version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

tasks.publish.dependsOn build
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId project.archivesBaseName
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
			url "$projectDir/../../CommonMaven"
		}
	}
}
